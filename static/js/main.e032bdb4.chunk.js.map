{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","splice","React","Component","About","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"gZAkDeA,MA5Cf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OAEE,yBAAKC,UAAU,SACb,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CACLR,OACAC,QACAC,UACAC,SACAC,YAIJ,yBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOR,UAAU,iBACvBO,OAIP,uBAAGP,UAAU,kBAAkBH,EAAQa,MAAM,EAAG,KAAhD,YCyBKC,G,iNAlDbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IACd,oEAPQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IATzB,2C,mFAaVQ,KAAKN,c,+BAGE,MAEuBM,KAAKjB,MAA3BS,EAFD,EAECA,UAAWC,EAFZ,EAEYA,OACnB,OACE,6BAASb,UAAU,aAChBY,EACC,yBAAKZ,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZa,EAAOP,KAAI,SAAAe,GAAK,OACf,kBAAC,EAAD,CACEZ,IAAKY,EAAM3B,GACXA,GAAI2B,EAAM3B,GACVC,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,OAAOwB,OAAO,EAAE,e,GA1C3BC,IAAMC,Y,MCSVC,MAZf,WACI,OACI,yBAAK1B,UAAU,oBACX,8IAIA,8DCUG2B,E,4LAhBS,IAAD,EACYP,KAAKQ,MAAzBC,EADQ,EACRA,SAASC,EADD,EACCA,aACMC,IAAnBF,EAAS1B,OACR2B,EAAQE,KAAK,O,+BAGX,IACEH,EAAYT,KAAKQ,MAAjBC,SAER,OAAGA,EAAS1B,MACD,8BAAO0B,EAAS1B,MAAMP,OAEtB,S,GAdE4B,IAAMC,W,MCYZQ,MAVf,WACE,OAEE,yBAAKjC,UAAU,OACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,MCaSiC,MAdf,WACE,OAIE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW1B,IACxC,kBAAC,IAAD,CAAOwB,KAAK,SAASE,UAAWX,IAChC,kBAAC,IAAD,CAAOS,KAAK,aAAaE,UAAWV,MCZ1CW,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,a","file":"static/js/main.e032bdb4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n// Home.js에서 받아오는 Movie component\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n      // Link 통해서 라우터 이용 \r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: `/movie/${id}`, // 라우터 pathname 지정해주고\r\n          state: {\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres\r\n          }\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => ( // map을 통해서 genre index 를 map하고 index는 키값으로 genre는 genres 보내준다\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\n// propTypes를 통해 각 변수마다 들어와야할 값과 조건을 정해준다. isRequried => 반드시 있어야하는값\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired // 배열의 값이 들어와야함 => 배열내의 값은 스트링\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\n\r\nclass Home extends React.Component {\r\n    // state 값은 변할 수 없다. setstate를 통해 변경 가능\r\n  state = {\r\n    isLoading: true,\r\n    movies: []\r\n  };\r\n  // async를 통해 안에 있는 url을 통해 데이터를 받아올 때까지 기다릴 수 있다 => 비동기화\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies }\r\n      }\r\n      //await을 통해 axios가 끝날때까지 기다린다.\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=download_count\"\r\n    );\r\n    this.setState({ movies, isLoading: false });\r\n  };\r\n  //rendering 완료 후에 실행되는 함수 렌더링 끝나면 getmovies를 통해 데이터 받아옴\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n  // 페이지를 실행시키면 가장 먼저 시작하는 함수\r\n  render() {\r\n      //this.state를 통해서 번거로운 변수 선언 반복 감소\r\n    const { isLoading, movies } = this.state;\r\n    return ( // 여기서는 class와 구분이 안되므로 className으로 class 설정(css시 사용)\r\n      <section className=\"container\">\r\n        {isLoading ? ( //삼항 연산자 이용\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map(movie => ( // map을 통해 Proptypes를 통해 받아온 데이터들 저장\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres.splice(0,3)} // 장르가 여러개이면 css 깨져서 3개까지만..\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                “Freedom is the freedom to say that two plus two make four. If that is\r\n                granted, all else follows.”\r\n      </span>\r\n            <span>− George Orwell, 1984</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nclass Detail extends React.Component{\r\n    // Rendering 후 함수 실행\r\n    componentDidMount(){\r\n        const {location,history} = this.props;\r\n        if(location.state === undefined){\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    render() {\r\n        const { location } =this.props;\r\n        // 값이 있으면 title 보여주고 없으면 Null\r\n        if(location.state){\r\n            return <span>{location.state.title}</span>\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n      // Home은 주소/로     About은 주소/about으로 \r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    // 해쉬 라우터를 통해서 안에 라우터와 네비게이션을 집어넣는다. browser라우터 등 라우터 여러가지 존재\n    // 여기 네이게이션을 통해서 Home 버튼과 홈링크과 어바웃 링크 생성\n    // 라우터를 통해 각각의 url로 이동하고 그 url로 이동하면 해당하는 js를 연결\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// potato id를 가진 부분에다가 App을 렌더링\nReactDOM.render(<App/>, document.getElementById('potato'));\n"],"sourceRoot":""}